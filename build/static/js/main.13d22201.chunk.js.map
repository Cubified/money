{"version":3,"sources":["cards.js","App.js","index.js"],"names":["categories","cards","split","forEach","line","ind","tmp","item","item_ind","toLowerCase","isNaN","parseFloat","push","format_money","money","out","str","toFixed","toString","trail","indexOf","substring","reverse","char","length","join","encode_string_as_color","string","color","r","g","b","charCodeAt","should_rerender","AddCardDialog","props","state","card","nickname","name_error","name_error_text","nickname_error","nickname_error_text","change_value","bind","change_nickname","validate","e","this","setState","target","value","undefined","existing_cards","find","el","name","Dialog","open","onClose","card_db","DialogTitle","variant","style","width","DialogContent","Autocomplete","options","sort","a","issuer","localeCompare","groupBy","option","getOptionLabel","onChange","renderInput","params","TextField","label","margin","fullWidth","error","helperText","type","DialogContentText","fee","credit","DialogActions","Button","onClick","React","Component","ViewController","drawer","drawer_type","window","innerWidth","toggle_drawer","addEventListener","old","AppBar","position","marginLeft","Toolbar","IconButton","edge","display","visibility","opacity","Typography","view_name","Drawer","List","flexDirection","height","Object","keys","view_names","map","vn","ListItem","button","selected","changeView","ListItemIcon","icon","ListItemText","flexGrow","timeframe","change_timeframe","QuickLook","Grid","Card","className","textAlign","link","Link","href","Breakdown","tooltip","set_hover","generate_tooltip","chart_id","Math","random","hover","data","x","y","datum","title","data_is_empty","data-tip","data-for","conform_data","radius","lineWidth","viewBoxSize","center","onMouseOver","onMouseOut","labelStyle","fontSize","fontFamily","fill","labelPosition","id","getContent","View","nextProps","nextState","view","number","children","AccountsView","gutterBottom","container","spacing","xs","justifyContent","total_assets","outstanding_debt","gross_inflow","gross_outflow","change_view","add_new_transaction","open_card_dialog","card_data","CardMedia","image","CardContent","balance","rewards","CardActions","remove_card","Paper","square","Tabs","spend_tab","change_spend_tab","centered","Tab","category_data","abs","TransactionsView","columns","field","headerName","editable","renderCell","date","Date","row","getMonth","getDate","getFullYear","amount","Select","val","change_row","MenuItem","category","remove_transaction","background","rows","pageSize","onCellEditCommit","RewardsView","alignItems","total_rewards","best_performer","recommended_next_card","card_tab","change_card_tab","CardSimulatorView","base","change_base","compute_rewards","compute_card","compute_base","conversion","cat","db","obj","projected","Infinity","new_db","total","itr_cat","total_spend","current","projections","set_recommended_next_card","slice","af","reduce","prev","next","sum","TableContainer","component","Table","TableHead","TableRow","TableCell","align","TableBody","fontStyle","fontWeight","Setup","active_card","card_dialog_open","credit_score","type_first_name","type_credit_score","add_card","card_dialog_close","trim","new_card","arr","parseInt","visible","Container","maxWidth","pointerEvents","i","store_cards","next_view","Main","localStorage","getItem","drawer_is_permanent","trans_dialog_open","JSON","parse","update_everything","index","close_card_dialog","location","hash","decodeURIComponent","scrollTo","now","splice","evt","new_row","stringify","cpy","filter","itr","setTimeout","cd","month","year","prevProps","prevState","snapshot","cards_from_setup","setItem","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.13d22201.chunk.js","sourcesContent":["const csv = `Issuer,Name,Fee,Type,Credit,Restaurants,Gas,Groceries,Travel,Entertainment,Online Shopping,Other,Conversion,Rotating/Custom,TSA,Insurance,Builder,Notes,Image,Link\nDiscover It,Student Cash Back,0,Cash back,300,0.01,0.01,0.01,0.01,0.01,0.01,0.01,1,Yes,No,No,Yes,5% rotating cash back,https://m.foolcdn.com/media/affiliates/credit-card-art/discover-it-student-cash-back_5mNPw7i.png,https://www.discover.com/credit-cards/student/it-card.html\nDiscover It,Chrome for Students,0,Cash back,300,0.02,0.02,0.01,0.01,0.01,0.01,0.01,1,No,No,No,Yes,,https://cdn.wallethub.com/common/product/images/creditcards/500/discover-it-chrome-for-students-credit-card-1003548c.png,https://www.discover.com/credit-cards/student/chrome-card.html\nChase,Freedom Flex,0,Cash back,690,0.03,0.01,0.01,0.05,0.01,0.01,0.01,1,Yes,No,No,No,5% on travel is only if booked through Chase's portal,https://creditcards.chase.com/K-Marketplace/images/modals/freedom_cal_freedom_flex_card.png,https://creditcards.chase.com/cash-back-credit-cards/freedom/flex\nChase,Freedom Unlimited,0,Cash back,700,0.03,0.015,0.015,0.05,0.015,0.015,0.015,1,No,No,No,No,5% on travel is only if booked through Chase's portal,https://creditcards.chase.com/K-Marketplace/images/cardart/freedom_unlimited_card.png,https://creditcards.chase.com/cash-back-credit-cards/freedom/unlimited\nChase,Freedom Student,0,Cash back,300,0.01,0.01,0.01,0.01,0.01,0.01,0.01,1,No,No,No,Yes,,https://creditcards.chase.com/K-Marketplace/images/cardart/freedom_student_card.png,https://creditcards.chase.com/cash-back-credit-cards/freedom/student\nChase,Sapphire Preferred,95,Travel,760,3,1,1,5,1,1,1,0.01,No,No,Yes,No,5x on travel is only if booked through Chase,https://creditcards.chase.com/K-Marketplace/images/cardart/sapphire_preferred_card.png,https://creditcards.chase.com/rewards-credit-cards/sapphire/preferred\nChase,Sapphire Reserve,550,Travel,760,3,1,1,3,1,1,1,0.01,No,Yes,Yes,No,$300 annual travel credit,https://creditcards.chase.com/K-Marketplace/images/cardart/sapphire_reserve_card.png,https://creditcards.chase.com/rewards-credit-cards/sapphire/reserve\nCiti,Double Cash,0,Cash back,760,0.02,0.02,0.02,0.02,0.02,0.02,0.02,1,No,No,No,No,,https://www.citi.com/CRD/images/card_no_reflection/citi-double-cash-credit-card.jpg,https://www.citi.com/credit-cards/citi-double-cash-credit-card\nCiti,Premier,95,Travel,760,3,3,3,3,1,1,1,0.01,No,No,No,No,,https://www.citi.com/CRD/images/citi-premier/citi-premier_222x140.png,https://www.citi.com/credit-cards/citi-premier-credit-card\nCiti,Custom Cash,0,Cash back,760,0.01,0.01,0.01,0.01,0.01,0.01,0.01,1,Yes,No,No,No,5% cash back in top spend category,https://mms.businesswire.com/media/20210610005221/en/884310/5/Custom_Cash.jpg,https://www.citi.com/credit-cards/citi-custom-cash-credit-card\nCapital One,VentureOne,0,Travel,760,1.25,1.25,1.25,1.25,1.25,1.25,1.25,0.01,No,No,No,No,,https://ecm.capitalone.com/WCM/card/products/ventureone-card-art/tablet.png,https://www.capitalone.com/credit-cards/ventureone/\nCapital One,Venture,95,Travel,760,2,2,2,2,2,2,2,0.01,No,Yes,Yes,No,,https://ecm.capitalone.com/WCM/card/products/venture-card-art/tablet.png,https://www.capitalone.com/credit-cards/venture/\nCapital One,SavorOne,0,Cash back,760,0.03,0.01,0.03,0.01,0.01,0.01,0.01,1,No,No,No,No,,https://ecm.capitalone.com/WCM/card/products/savorone-card-art/tablet.png,https://www.capitalone.com/credit-cards/savorone-dining-rewards/\nCapital One,Savor,95,Cash back,760,0.04,0.01,0.03,0.01,0.01,0.01,0.01,1,No,No,No,No,,https://ecm.capitalone.com/WCM/card/products/savor-card-art/tablet.png,https://www.capitalone.com/credit-cards/savor-dining-rewards/\nCapital One,SavorOne for Students,0,Cash back,580,0.03,0.01,0.03,0.01,0.01,0.01,0.01,1,No,No,No,Yes,,https://ecm.capitalone.com/WCM/card/products/savorone-card-art.png,https://www.capitalone.com/credit-cards/savorone-student/\nAmerican Express,Blue Cash Everyday,0,Cash back,700,0.01,0.02,0.03,0.01,0.01,0.01,0.01,1,No,No,No,No,,https://icm.aexp-static.com/Internet/Acquisition/US_en/AppContent/OneSite/category/cardarts/blue-cash-everyday.png,https://www.americanexpress.com/us/credit-cards/card/blue-cash-everyday/\nAmerican Express,Blue Cash Preferred,95,Cash back,700,0.01,0.03,0.06,0.01,0.01,0.01,0.01,1,No,No,No,No,6% cash back is only up to $6k in spend,https://icm.aexp-static.com/Internet/Acquisition/US_en/AppContent/OneSite/category/cardarts/blue-cash-preferred.png,https://www.americanexpress.com/us/credit-cards/card/blue-cash-preferred/\nAmerican Express,Green Card,150,Travel,760,3,1,1,3,1,1,1,0.01,No,No,Yes,No,,https://cdn.wallethub.com/common/product/images/creditcards/500/american-express-green-card-1340467c.jpg,https://www.americanexpress.com/us/credit-cards/card/green/\nAmerican Express,Gold Card,250,Travel,760,4,1,4,3,1,1,1,0.01,No,No,Yes,No,$120 Uber cash,https://icm.aexp-static.com/Internet/Acquisition/US_en/AppContent/OneSite/category/cardarts/gold-card.png,https://www.americanexpress.com/us/credit-cards/card/gold-card/\nAmerican Express,Platinum Card,695,Travel,760,1,1,1,5,1,1,1,0.01,No,Yes,Yes,No,$200 Uber cash + $200 travel credit + other benefits,https://icm.aexp-static.com/Internet/Acquisition/US_en/AppContent/OneSite/category/cardarts/platinum-card.png,https://www.americanexpress.com/us/credit-cards/card/platinum/\nBank of America,Travel Rewards,0,Travel,750,1.5,1.5,1.5,1.5,1.5,1.5,1.5,0.01,No,No,No,No,,https://www.bankofamerica.com/content/images/ContextualSiteGraphics/CreditCardArt/en_US/Approved_PCM/8blm_trvsigcm_v_250x158.png,https://www.bankofamerica.com/credit-cards/products/travel-rewards-credit-card/\nBank of America,Customized Cash Rewards,0,Cash back,750,0.01,0.01,0.02,0.01,0.01,0.01,0.01,1,Yes,No,No,No,3% cash back on user-selected category,https://www.nerdwallet.com/cdn/images/marketplace/credit_cards/56683306-5399-4ad5-873f-925ac4b61e9a/4abab28bcdaf1889a87cb0d20d72f1ca670e86145d1da744a1ffe2797b117174.jpg,https://www.bankofamerica.com/credit-cards/products/cash-back-credit-card/\nChase,Amazon Prime Rewards,0,Cash back,750,0.02,0.02,0.01,0.01,0.01,0.05,0.01,1,No,No,No,No,Requires Prime membership + 5% cash back at Whole Foods as well,https://creditcards.chase.com/K-Marketplace/images/cardart/amazon_card.png,https://www.amazon.com/gp/cobrandcard?&plattr=ChaseMS\nCiti,Rewards+,0,Travel,760,1,2,2,1,1,1,1,0.01,No,No,No,No,Purchases round points up to the nearest 10,https://www.citi.com/CRD/images/citi-rewards-plus/citi-rewards-plus_222x140.png,https://www.citi.com/credit-cards/citi-rewards-plus-credit-card\nBank of America,Unlimited Cash Rewards,0,Cash back,750,0.015,0.015,0.015,0.015,0.015,0.015,0.015,1,No,No,No,No,,https://www.bankofamerica.com/content/images/ContextualSiteGraphics/CreditCardArt/en_US/Approved_PCM/8cty_cshsigcm_v_250x157.png,https://www.bankofamerica.com/credit-cards/products/unlimited-cash-back-credit-card/\nBank of America,Premium Rewards,95,Travel,750,2,1.5,2,2,1.5,1.5,1.5,0.01,No,Yes,Yes,No,2x on groceries is only until end of 2021,https://www.bankofamerica.com/content/images/ContextualSiteGraphics/CreditCardArt/en_US/Approved_PCM/8cal_prmsigcm_v_250x158.png,https://www.bankofamerica.com/credit-cards/products/premium-rewards-credit-card/\nBank of America,Travel Rewards for Students,0,Travel,300,1.5,1.5,1.5,1.5,1.5,1.5,1.5,0.01,No,No,No,Yes,,https://www.forbes.com/advisor/wp-content/uploads/2020/02/8blm_trvsigcm_v_250x158-1.png,https://www.bankofamerica.com/credit-cards/products/travel-rewards-credit-card/\nVisa,Petal 2,0,Cash back,300,0.01,0.01,0.01,0.01,0.01,0.01,0.01,1,Yes,No,No,Yes,1.5% cash back after 12 months of payments + higher cash back at select merchants,https://ck-content.imgix.net/pcm/content/127176e9afc411dce2e8-Petal-2-Card_Art__1_.png,https://www.petalcard.com/petal-2\nWells Fargo,Active Cash,0,Cash back,700,0.02,0.02,0.02,0.02,0.02,0.02,0.02,1,No,No,No,No,,https://www.creditcards.com/ext/cdn.prodstatic.com/shared/images/cards/336x211/04601840-e56b-11eb-99d8-ddd3faec9ad4.png,https://creditcards.wellsfargo.com/active-cash-credit-card/\nCapital One,Quicksilver,0,Cash back,760,0.015,0.015,0.015,0.015,0.015,0.015,0.015,1,No,No,No,No,,https://www.creditcards.com/ext/cdn.prodstatic.com/shared/images/cards/336x211/capital-one-quicksilver-cash-rewards-credit-card-041217.png,https://www.capitalone.com/credit-cards/quicksilver/\nDiscover It,Miles,0,Travel,670,1.5,1.5,1.5,1.5,1.5,1.5,1.5,0.01,No,No,No,No,,https://www.creditcards.com/ext/cdn.prodstatic.com/shared/images/cards/336x211/7c8fe9c0-bb9c-11ea-bf12-c7437d5726b0.png,https://www.discover.com/credit-cards/travel/\nCiti,AAdvantage MileUp,0,Travel,700,1,1,2,2,1,1,1,0.01,No,No,No,No,2x on travel is only for American Airlines purchases,https://www.creditcards.com/ext/cdn.prodstatic.com/shared/images/cards/336x211/72fe5080-fb22-11e9-9794-5d95042ca5c0.png,https://creditcards.aa.com/citi-mileup-card-american-airlines-direct/\nBarclays,AAdvantage Aviator,0,Travel,700,0.5,0.5,0.5,1,0.5,0.5,0.5,0.01,No,No,No,No,1x on travel is only for American Airlines purchases,https://creditcards.aa.com/wp-content/uploads/2019/01/aviator_mastercard.png,https://creditcards.aa.com/barclay-credit-card-aviator-american-airlines-aadvantage/\nBarclays,AAdvantage Aviator Red,99,Travel,700,1,1,1,2,1,1,1,0.01,No,No,Yes,No,Free checked bag + priority boarding,https://cards.barclaycardus.com/content/dam/bcuspublic/card-plastic/card-front/AA2_card_rRGB_AviatorRed_WE_359x246_4074_072418.png,https://cards.barclaycardus.com/banking/cards/aadvantage-aviator-red-world-elite-mastercard/\nBarclays,AAdvantage Aviator Silver,195,Travel,700,1,1,1,3,1,1,1,0.01,No,Yes,Yes,No,Free checked bag + priority boarding + $25 inflight food credit + $50 inflight WiFi credit,https://creditcards.aa.com/wp-content/uploads/2019/01/aviator_silver.png,https://creditcards.aa.com/barclay-credit-card-aviator-silver-american-airlines-aadvantage/\nCapital One,Quicksilver Student,0,Cash back,300,0.015,0.015,0.015,0.015,0.015,0.015,0.015,1,No,No,No,No,,https://www.creditcards.com/ext/cdn.prodstatic.com/shared/images/cards/336x211/f583a350-0063-11ec-97b1-37a1bb7c2537.png,https://www.capitalone.com/credit-cards/quicksilver-student/\nCiti,AAdvantage Platinum Select,99,Travel,700,2,2,1,2,1,1,1,0.01,No,No,Yes,No,Free checked bag + priority boarding,https://creditcards.aa.com/wp-content/uploads/2018/07/platinum_card-hires.png,https://creditcards.aa.com/citi-platinum-card-american-airlines-wand/?utm_medium=referral&utm_source=aa&utm_campaign=ccpage\nOther,Generic credit card,0,Cash back,300,0,0,0,0,0,0,0,0,No,No,No,No,,https://slashgear.com/wp-content/uploads/2017/10/mastercard_main.jpg,https://en.wikipedia.org/wiki/Credit_card\nOther,Venmo,0,Debit,300,0,0,0,0,0,0,0,0,No,No,No,No,,https://i.pcmag.com/imagery/reviews/05Zr4cy33kGKkO4e92S3wV7-13..1602794368.png,https://venmo.com\nOther,Generic checking account,0,Debit,300,0,0,0,0,0,0,0,0,No,No,No,No,,https://lh3.googleusercontent.com/proxy/8ki81iCRyOu1l4rfD1JIJIIgQyh5N5Ujalsj76IEtBPT4nLF1OyoSp9gb8YBvBiZ9rAUBhOxHIUg0Ir_GnegYutIntUFfX_PH4Wloows-o-L9Lww7wVRMzxx98DDZJxTK1_w,https://en.wikipedia.org/wiki/Checking_account\nChase,Total Checking,0,Debit,300,0,0,0,0,0,0,0,0,No,No,No,No,,https://download.logo.wine/logo/Chase_Bank/Chase_Bank-Logo.wine.png,https://www.chase.com/personal/checking/total-checking\nCapital One,360 Checking,0,Debit,300,0,0,0,0,0,0,0,0,No,No,No,No,,https://logos-world.net/wp-content/uploads/2021/04/Capital-One-Logo.png,https://www.capitalone.com/bank/checking-accounts/online-checking-account/\nBank of America,Advantage Banking,0,Debit,300,0,0,0,0,0,0,0,0,No,No,No,No,,https://1000logos.net/wp-content/uploads/2016/10/Bank-of-America-logo.png,https://www.bankofamerica.com/deposits/checking/advantage-banking/\nWells Fargo,Everyday Checking,0,Debit,300,0,0,0,0,0,0,0,0,No,No,No,No,,https://upload.wikimedia.org/wikipedia/commons/thumb/b/b3/Wells_Fargo_Bank.svg/1024px-Wells_Fargo_Bank.svg.png,https://www.wellsfargo.com/checking/everyday/\nAlly Bank,Interest Checking,0,Debit,300,0,0,0,0,0,0,0,0,No,No,No,No,,https://upload.wikimedia.org/wikipedia/commons/thumb/8/86/Ally_Bank_logo.svg/1280px-Ally_Bank_logo.svg.png,https://www.ally.com/bank/interest-checking-account/`;\n\nlet categories = [],\n    cards = [];\ncsv.split('\\n').forEach((line, ind)=>{\n  if(ind === 0){\n    categories = line.split(',');\n  } else {\n    let tmp = {};\n    line.split(',').forEach((item, item_ind)=>{\n      tmp[categories[item_ind].toLowerCase()] = ((!isNaN(parseFloat(item)) && categories[item_ind] !== 'Notes' && categories[item_ind] !== 'Name') ? parseFloat(item) : item);\n    });\n    cards.push(tmp);\n  }\n});\n\nexport default cards;\n","/*eslint no-restricted-globals: 0*/\n\n/*\n * App.js: Main app components\n */\n\n/*\n * TODO:\n *  - More accurate points conversion/variable\n *      conversion factors (transfer partners/cash/etc.)\n *  - Minimum spend/welcome bonus tracker\n *  - Store card statement date/compute per-statement info\n *      (this will be very complicated and hard)\n *  - Ability to reorder cards\n *  - Change credit card nicknames\n *\n *  - To-dos area?\n */\n\nimport React from 'react';\n\nimport Container from '@material-ui/core/Container';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Drawer from '@material-ui/core/Drawer';\nimport IconButton from '@material-ui/core/IconButton';\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport {DataGrid} from '@material-ui/data-grid';\n\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nimport Link from '@material-ui/core/Link';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\n\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\nimport 'date-fns';\n\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ListIcon from '@material-ui/icons/List';\nimport AccountBalanceIcon from '@material-ui/icons/AccountBalance';\nimport CreditCardIcon from '@material-ui/icons/CreditCard';\nimport TrashIcon from '@material-ui/icons/Delete';\nimport AssessmentIcon from '@material-ui/icons/Assessment';\nimport CalendarTodayIcon from '@material-ui/icons/CalendarToday';\nimport EventNoteIcon from '@material-ui/icons/EventNote';\nimport EventIcon from '@material-ui/icons/Event';\n\nimport { PieChart } from 'react-minimal-pie-chart';\nimport ReactTooltip from 'react-tooltip';\n\nimport card_db from './cards.js';\n\n/*\n * GLOBAL UTILS\n */\nfunction format_money(money){\n  let out = '',\n      str = money.toFixed(2).toString(),\n      trail = (str.indexOf('.') > -1 ? str.substring(str.indexOf('.')) : '');\n\n  str.split('').reverse().forEach((char, ind)=>{\n    if(char === '-') return;\n    if(ind % 3 === 0 && ind > trail.length){\n      out += ',';\n    }\n    out += char;\n  });\n  out = out.split('').reverse().join('');\n\n  out = `$${out}`;\n  if(money < 0) out = `(${out})`;\n\n  return out;\n}\n\nfunction encode_string_as_color(string){\n  let out = '',\n      color = {r:0,g:0,b:0};\n\n  color.r = string.charCodeAt(0);\n  color.g = string.charCodeAt(string.length/2);\n  color.b = string.charCodeAt(string.length-1);\n\n  out = `rgb(${color.r}, ${color.g}, ${color.b})`;\n\n  return out;\n}\n\nlet should_rerender = true;\n\n/*\n * REUSED COMPONENTS\n */\nclass AddCardDialog extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      card: null,\n      nickname: '',\n\n      name_error: false,\n      name_error_text: '',\n\n      nickname_error: false,\n      nickname_error_text: ''\n    };\n    this.change_value = this.change_value.bind(this);\n    this.change_nickname = this.change_nickname.bind(this);\n    this.validate = this.validate.bind(this);\n  }\n  change_value(e, card){\n    if(card === null){\n      this.setState({\n        card,\n        name_error: false,\n        name_error_text: ''\n      });\n    } else {\n      this.setState({\n        card,\n        name_error: false,\n        name_error_text: ''\n      });\n    }\n  }\n  change_nickname(e){\n    this.setState({\n      nickname: e.target.value,\n      nickname_error: false,\n      nickname_error_text: ''\n    });\n  }\n  validate(){\n    let out = true;\n\n    if(!this.state.card){\n      this.setState({\n        name_error: true,\n        name_error_text: 'Please select an account. If your account is not listed, select from the generic options at the bottom.'\n      });\n      return false;\n    }\n\n    if(this.props.existing_cards.find(el=>el.nickname===(this.state.nickname===''?this.state.card.name:this.state.nickname)) !== undefined){\n      this.setState({\n        nickname_error: true,\n        nickname_error_text: 'A card with this name or nickname already exists.'\n      });\n      out = false;\n    }\n    return out;\n  }\n  render(){\n    return (\n      <Dialog open={this.props.open} onClose={()=>{this.change_value(undefined, card_db[card_db.length-1]);this.change_nickname({target:{value:''}});this.props.onClose(undefined)}}>\n        <DialogTitle variant=\"h6\" style={{width:\"500px\"}}>Add an account</DialogTitle>\n        <DialogContent>\n          <Autocomplete\n            options={card_db.sort((a, b)=>{if(a.issuer==='Other') return 1; else if(b.issuer==='Other') return -1; else return -b.issuer.localeCompare(a.issuer)})}\n            groupBy={(option) => option.issuer}\n            getOptionLabel={(option) => {return ((option.issuer==='Other'?'':option.issuer+' ')+option.name)||''}}\n            onChange={this.change_value}\n            renderInput={(params) => (\n              <TextField {...params} label=\"Account name\" margin=\"normal\" variant=\"outlined\" fullWidth error={this.state.name_error} helperText={this.state.name_error_text} />\n            )}\n          />\n          <TextField label=\"Nickname (optional)\" variant=\"outlined\" fullWidth error={this.state.nickname_error} helperText={this.state.nickname_error_text} value={this.state.nickname} onChange={this.change_nickname} />\n          <br />\n          <br />\n          {\n            (this.state.card !== null && this.state.card.type !== 'Debit' ? (\n              <DialogContentText>\n                Annual fee: ${this.state.card===null?'0':this.state.card.fee}\n                <br />\n                Recommended credit score: {this.state.card===null?'N/A':this.state.card.credit}\n              </DialogContentText>\n            ) : (<></>))\n          }\n        </DialogContent>\n        <DialogActions>\n          <Button variant=\"outlined\" color=\"primary\" onClick={()=>{if(this.validate()){this.change_value(undefined, card_db[card_db.length-1]);this.change_nickname({target:{value:''}});this.props.onClose(this.state.card, this.state.nickname)}}}>Add</Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n}\n\n/*\nclass AddTransDialog extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      trans: {id: Date.now(), date: new Date(Date.now()), name: 'jeff', amount: '$123', card: 'meme', category: 'other'}\n    };\n    this.handleDateChange = this.handleDateChange.bind(this);\n  }\n  handleDateChange(date){\n    let cpy = JSON.parse(JSON.stringify(this.state.trans));\n    cpy.date = date;\n    this.setState({\n      trans: cpy\n    });\n  }\n  render(){\n    return (\n      <Dialog open={this.props.open} onClose={()=>{this.props.onClose(undefined)}}>\n        <DialogTitle variant=\"h6\" style={{width:\"500px\"}}>Add a transaction</DialogTitle>\n        <DialogContent>\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\n            <KeyboardDatePicker\n              disableToolbar\n              variant=\"inline\"\n              format=\"MM/dd/yyyy\"\n              margin=\"normal\"\n              id=\"date-picker-inline\"\n              label=\"Date\"\n              value={this.state.trans.date}\n              onChange={this.handleDateChange}\n            />\n            <TextField variant=\"outlined\" label=\"Name\" />\n          </MuiPickersUtilsProvider>\n        </DialogContent>\n        <DialogActions>\n          <Button variant=\"outlined\" color=\"secondary\" onClick={()=>{this.props.onClose(this.state.trans);this.state.trans.id=Date.now()}}>Add</Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n}\n*/\n\nclass ViewController extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      drawer: false,\n      drawer_type: (window.innerWidth < 900 ? 'temporary' : 'permanent')\n    };\n    this.toggle_drawer = this.toggle_drawer.bind(this);\n  }\n  componentDidMount(){\n    window.addEventListener('resize', ()=>{\n      let old = this.state.drawer_type;\n      this.setState({\n        drawer_type: (window.innerWidth < 900 ? 'temporary' : 'permanent')\n      });\n      if(old !== this.state.drawer_type && this.state.drawer_type === 'temporary') this.setState({drawer:false});\n    });\n  }\n  toggle_drawer(){\n    this.setState({\n      drawer: !this.state.drawer\n    });\n  }\n  render(){\n    return (\n      <div>\n        <AppBar position=\"static\" style={this.state.drawer_type==='permanent'?{width:'calc(100vw - 200px)', marginLeft:'200px'}:{}}>\n          <Toolbar>\n            <IconButton edge=\"start\" color=\"inherit\" onClick={this.toggle_drawer} style={this.state.drawer_type==='temporary'?{}:{display:'none',visibility:'hidden',opacity:'0'}}>\n              <MenuIcon />\n            </IconButton>\n            <Typography variant=\"h6\">\n              {this.props.view_name}\n            </Typography>\n          </Toolbar>\n        </AppBar>\n        <Drawer variant={this.state.drawer_type} open={this.state.drawer} onClose={this.toggle_drawer} style={{width:'200px'}}>\n          <List style={{display:'flex',flexDirection:'column',height:'100%', width:'200px'}}>\n            {\n              Object.keys(this.props.view_names).map((vn, ind)=>{\n                if(vn === 'hr') return (<hr key={ind} style={{width:'200px'}}/>);\n                return (\n                  <ListItem key={ind} button selected={this.props.view_name===vn} onClick={()=>{this.props.changeView(vn);this.setState({drawer:false})}}>\n                    <ListItemIcon>{this.props.view_names[vn].icon}</ListItemIcon>\n                    <ListItemText>{vn}</ListItemText>\n                  </ListItem>\n                );\n              })\n            }\n            <div style={{flexGrow:1}}></div>\n            <ListItem button selected={this.props.timeframe==='all'} onClick={()=>{this.props.change_timeframe('all')}}>\n              <ListItemIcon><EventNoteIcon/></ListItemIcon>\n              <ListItemText>View All Time</ListItemText>\n            </ListItem>\n            <ListItem button selected={this.props.timeframe==='ytd'} onClick={()=>{this.props.change_timeframe('ytd')}}>\n              <ListItemIcon><EventIcon/></ListItemIcon>\n              <ListItemText>View YTD</ListItemText>\n            </ListItem>\n            <ListItem button selected={this.props.timeframe==='month'} onClick={()=>{this.props.change_timeframe('month')}}>\n              <ListItemIcon><CalendarTodayIcon/></ListItemIcon>\n              <ListItemText>View Month</ListItemText>\n            </ListItem>\n          </List>\n        </Drawer>\n      </div>\n    );\n  }\n}\n\nclass QuickLook extends React.Component {\n  render(){\n    return (\n      <Grid item>\n        <Card className=\"padded-card\" style={{textAlign:'center'}}>\n          <Typography variant=\"h4\">{this.props.link?(<Link href={this.props.link}>{this.props.value}</Link>):(<>{this.props.value}</>)}</Typography>\n          <Typography variant=\"overline\">{this.props.label}</Typography>\n        </Card>\n      </Grid>\n    );\n  }\n}\n\nclass Breakdown extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      tooltip: undefined\n    };\n    this.set_hover = this.set_hover.bind(this);\n    this.generate_tooltip = this.generate_tooltip.bind(this);\n\n    this.chart_id = `chart-${Math.random()*10000}`;\n  }\n  set_hover(hover, ind){\n    if(hover === undefined){\n      this.setState({\n        tooltip: undefined\n      });\n    } else {\n      this.setState({\n        tooltip: ind\n      });\n    }\n  }\n  generate_tooltip(){\n    if(this.state.tooltip === undefined) return null;\n\n    return `${this.props.data[this.state.tooltip][this.props.x]}: ${format_money(this.props.data[this.state.tooltip][this.props.y])}`;\n  }\n  conform_data(data){\n    let out = [];\n    data.forEach((datum)=>{\n      out.push({\n        title: datum[this.props.x],\n        value: datum[this.props.y],\n        color: encode_string_as_color(datum[this.props.x])\n      });\n    });\n    return out;\n  }\n  data_is_empty(data){\n    let out = true;\n    data.forEach((datum)=>{\n      if(datum[this.props.y] > 0) out = false;\n    });\n    return out;\n  }\n  render(){\n    if(this.data_is_empty(this.props.data)){\n      return (\n        <Typography variant=\"subtitle1\" style={{textAlign:'center'}}>\n          <br />\n          No spending yet recorded.\n        </Typography>\n      );\n    }\n\n    return (\n      <div data-tip='' data-for={this.chart_id}>\n        <PieChart\n          data={this.conform_data(this.props.data)}\n          radius={30}\n          lineWidth={30}\n          viewBoxSize={[100, 75]}\n          center={[50, 32.5]}\n          onMouseOver={this.set_hover}\n          onMouseOut={()=>{this.set_hover(undefined)}}\n          label={()=>{return this.props.title}}\n          labelStyle={{\n            fontSize: '0.2125rem',\n            fontFamily: 'Roboto, sans-serif',\n            fill: '#333',\n          }}\n          labelPosition={0}\n        />\n        <ReactTooltip id={this.chart_id} getContent={this.generate_tooltip} />\n      </div>\n    );\n  }\n}\n\nclass View extends React.Component {\n  shouldComponentUpdate(nextProps, nextState){\n    if(nextProps.view === this.props.number ||\n       this.props.view === this.props.number) return true;\n    return false;\n  }\n  render(){\n    return (\n      <div style={this.props.view===this.props.number?{}:{display:'none',visibility:'hidden',opacity:'0'}}>\n        {this.props.children}\n      </div>\n    );\n  }\n}\n\n/*\n * SUB-VIEWS\n */\n\nclass AccountsView extends React.Component {\n  render(){\n    return (\n      <>\n        <Typography variant=\"h4\" gutterBottom style={{textAlign:'center'}}>Welcome back {this.props.name}, here's your money at a glance:</Typography>\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <Grid container justifyContent=\"center\" spacing={2}>\n              <QuickLook label=\"Total Assets\" value={format_money(this.props.total_assets)} />\n              <QuickLook label=\"Outstanding Debt\" value={format_money(this.props.outstanding_debt)} />\n            </Grid>\n            <br />\n            <Grid container justifyContent=\"center\" spacing={2}>\n              <QuickLook label=\"Gross Inflow\" value={format_money(this.props.gross_inflow)} />\n              <QuickLook label=\"Gross Outflow\" value={format_money(this.props.gross_outflow)} />\n            </Grid>\n            <br />\n            <br />\n            <Grid container justifyContent=\"center\" spacing={2}>\n              <Button variant=\"outlined\" color=\"primary\" onClick={()=>{this.props.change_view('Transactions');this.props.add_new_transaction()}}>Add a Transaction</Button>\n              <span>&nbsp;&nbsp;</span>\n              <Button variant=\"outlined\" color=\"secondary\" onClick={this.props.open_card_dialog}>Add an Account</Button>\n            </Grid>\n          </Grid>\n        </Grid>\n        <br />\n        <hr />\n        <br />\n        <Typography variant=\"h4\" gutterBottom style={{textAlign:'center'}}>Your accounts:</Typography>\n        {\n          this.props.card_data.map((card, ind)=>{\n            return (\n              <div key={ind}>\n                <Card className=\"full-width media-card\">\n                  <CardMedia image={card.image} className=\"media-card-image\" />\n                  <CardContent className=\"media-card-text\">\n                    <Typography variant=\"overline\">\n                      {card.issuer}\n                    </Typography>\n                    <Typography variant=\"h5\" gutterBottom>\n                      {card.nickname}\n                    </Typography>\n                    {\n                      (card.type === 'Debit' ? (\n                        <Typography variant=\"subtitle1\">\n                          Current balance: {format_money(card.balance)}\n                        </Typography>\n                      ) : (\n                        <Typography variant=\"subtitle1\">\n                          Outstanding debt: {format_money(card.outstanding_debt)}\n                          <br />\n                          Total rewards: {format_money(card.rewards)}\n                        </Typography>\n                      ))\n                    }\n                  </CardContent>\n                  <CardActions>\n                    <IconButton onClick={()=>{this.props.remove_card(card, ind)}}>\n                      <TrashIcon />\n                    </IconButton>\n                  </CardActions>\n                </Card>\n                <br />\n              </div>\n            );\n          })\n        }\n        <Button variant=\"contained\" color=\"primary\" fullWidth onClick={this.props.open_card_dialog}>Add Account</Button>\n        <br />\n        <hr />\n        <br />\n        <Typography variant=\"h4\" gutterBottom style={{textAlign:'center'}}>Spending breakdown:</Typography>\n        <Paper square>\n          <Tabs value={this.props.spend_tab} onChange={this.props.change_spend_tab} variant=\"fullWidth\" centered>\n            <Tab label=\"Spending by Account\" />\n            <Tab label=\"Spending by Category\" />\n          </Tabs>\n        </Paper>\n        <Breakdown data={this.props.spend_tab===0?this.props.card_data:this.props.category_data} x={this.props.spend_tab===0?\"nickname\":\"category\"} y=\"total_spend\" title={'Total Spending: '+format_money(Math.abs(this.props.gross_outflow))} />\n        <br />\n      </>\n    );\n  }\n}\n\nclass TransactionsView extends React.Component {\n  constructor(props){\n    super(props);\n    this.columns = [\n      {\n        field: 'date',\n        headerName: 'Date',\n        type: 'date',\n        width: 150,\n        editable: true,\n        renderCell: (id)=>{\n          let date = new Date(id.row.date);\n          return (\n            <span>{date.getMonth()+1}/{date.getDate()}/{date.getFullYear()}</span>\n          );\n        }\n      },\n      {\n        field: 'name',\n        headerName: 'Name',\n        width: 150,\n        editable: true\n      },\n      {\n        field: 'amount',\n        headerName: 'Amount',\n        type: 'number',\n        width: 150,\n        editable: true,\n        renderCell: (id) => (\n          <span>{format_money(id.row.amount)}</span>\n        )\n      },\n      {\n        field: 'card',\n        headerName: 'Account',\n        width: 150,\n        editable: true,\n        renderCell: (id) => (\n          <Select value={id.row.card} onChange={(e, val)=>{this.props.change_row({...id, value:val.props.value}, e)}} fullWidth>\n            {\n              this.props.card_data.map((card, ind)=>{\n                return (\n                  <MenuItem key={ind} value={card.nickname}>\n                    {card.nickname}\n                  </MenuItem>\n                )\n              })\n            }\n          </Select>\n        )\n      },\n      {\n        field: 'category',\n        headerName: 'Category',\n        width: 150,\n        editable: true,\n        renderCell: (id) => (\n          <Select value={id.row.category} onChange={(e, val)=>{this.props.change_row({...id, value:val.props.value}, e)}} fullWidth>\n            <MenuItem value=\"Restaurants\">Restaurants</MenuItem>\n            <MenuItem value=\"Travel\">Travel</MenuItem>\n            <MenuItem value=\"Groceries\">Groceries</MenuItem>\n            <MenuItem value=\"Gas\">Gas</MenuItem>\n            <MenuItem value=\"Entertainment\">Entertainment</MenuItem>\n            <MenuItem value=\"Online shopping\">Online shopping</MenuItem>\n            <MenuItem value=\"Other\">Other</MenuItem>\n          </Select>\n        )\n      },\n      {\n        field: \"action\",\n        headerName: \"Action\",\n        width: 120,\n        renderCell: (id) => (\n          <>\n            <IconButton onClick={() => this.props.remove_transaction(id)}>\n              <TrashIcon />\n            </IconButton>\n          </>\n        )\n      }\n    ];\n  }\n  render(){\n    return (\n      <>\n        <Typography variant=\"h4\" gutterBottom style={{textAlign:'center'}}>Your transactions at a glance:</Typography>\n        <div style={{height:'500px', width:'100%', background:'white'}}>\n          <DataGrid\n            rows={this.props.rows}\n            columns={this.columns}\n            pageSize={9}\n            onCellEditCommit={this.props.change_row}\n          />\n          <br />\n          <Button variant=\"contained\" color=\"primary\" fullWidth onClick={this.props.add_new_transaction}>Add New</Button>\n        </div>\n      </>\n    );\n  }\n}\n\nclass RewardsView extends React.Component {\n  render(){\n    return (\n      <>\n        <Typography variant=\"h4\" gutterBottom style={{textAlign:'center'}}>Your rewards at a glance:</Typography>\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <Grid container justifyContent=\"center\" alignItems=\"center\" spacing={2}>\n              <QuickLook label=\"Total Rewards\" value={format_money(this.props.total_rewards)} />\n              <QuickLook label=\"Your Best Performer\" value={this.props.best_performer===undefined?'N/A':(<><Typography variant=\"subtitle1\">{this.props.best_performer.issuer}</Typography>{this.props.best_performer.nickname}</>)} />\n            </Grid>\n            <br />\n            <Grid container justifyContent=\"center\" alignItems=\"center\" spacing={2}>\n              <QuickLook label=\"Outstanding debt\" value={format_money(this.props.outstanding_debt)} />\n              <QuickLook label=\"Recommended next card\" value={this.props.recommended_next_card===undefined?'N/A':(<><Typography variant=\"subtitle1\">{this.props.recommended_next_card.issuer}</Typography>{this.props.recommended_next_card.name}</>)} link={this.props.recommended_next_card===undefined?null:this.props.recommended_next_card.link} />\n            </Grid>\n          </Grid>\n        </Grid>\n        <br />\n        <hr />\n        <br />\n        <Typography variant=\"h4\" gutterBottom style={{textAlign:'center'}}>Your credit cards:</Typography>\n        {\n          this.props.card_data.map((card, ind)=>{\n            if(card.type === 'Debit') return (<div key={ind}></div>);\n            return (\n              <div key={ind}>\n                <Card className=\"full-width media-card\">\n                  <CardMedia image={card.image} className=\"media-card-image\" />\n                  <CardContent className=\"media-card-text\">\n                    <Typography variant=\"overline\">\n                      {card.issuer}\n                    </Typography>\n                    <Typography variant=\"h5\" gutterBottom>\n                      {card.nickname}\n                    </Typography>\n                    <Typography variant=\"subtitle1\">\n                      Total rewards: {format_money(card.rewards)}\n                    </Typography>\n                  </CardContent>\n                  <CardActions>\n                    <IconButton onClick={()=>{this.props.remove_card(card, ind)}}>\n                      <TrashIcon />\n                    </IconButton>\n                  </CardActions>\n                </Card>\n                <br />\n              </div>\n            );\n          })\n        }\n        <Button variant=\"contained\" color=\"primary\" fullWidth onClick={this.props.open_card_dialog}>Add Card</Button>\n        <br />\n        <hr />\n        <br />\n        <Typography variant=\"h4\" gutterBottom style={{textAlign:'center'}}>Your rewards:</Typography>\n        <Paper square>\n          <Tabs value={this.props.card_tab} onChange={this.props.change_card_tab} variant=\"fullWidth\" centered>\n            <Tab label=\"Rewards by Card\" />\n            <Tab label=\"Rewards by Category\" />\n          </Tabs>\n        </Paper>\n        <br />\n        <Breakdown data={this.props.card_tab===0?this.props.card_data:this.props.category_data} x={this.props.card_tab===0?\"nickname\":\"category\"} y=\"rewards\" title={'Total Rewards: '+format_money(this.props.total_rewards)} />\n        <br />\n      </>\n    );\n  }\n}\n\nclass CardSimulatorView extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      base: 1\n    };\n    this.change_base = this.change_base.bind(this);\n    this.compute_rewards = this.compute_rewards.bind(this);\n    this.compute_card = this.compute_card.bind(this);\n    this.compute_base = this.compute_base.bind(this);\n    this.data_is_empty = this.data_is_empty.bind(this);\n\n    this.categories = [\n      \"Restaurants\",\n      \"Travel\",\n      \"Groceries\",\n      \"Gas\",\n      \"Entertainment\",\n      \"Online shopping\",\n      \"Other\"\n    ];\n  }\n  change_base(e){\n    this.setState({base:e.target.value});\n  }\n  compute_rewards(row){\n    return row.amount * row.card[row.category.toLowerCase()] * row.card.conversion;\n  }\n  compute_card(cat, db){\n    let obj = this.props.category_data.find(el=>el.category===cat),\n      out = {projected: -Infinity},\n      projected = -Infinity,\n      new_db = [];\n\n    (db ?? card_db).forEach((card)=>{\n      let total = -card.fee;\n      this.props.category_data.forEach((itr_cat)=>{\n        total += this.compute_rewards({\n          amount: itr_cat.total_spend,\n          card,\n          category: itr_cat.category\n        });\n      });\n\n      if(total > 0) new_db.push(card);\n    });\n\n    new_db.forEach((card)=>{\n      projected = this.compute_rewards({\n        card,\n        amount: obj.total_spend,\n        category: cat\n      });\n      if(projected > out.projected){\n        out = {\n          category: cat,\n          card,\n          current: obj.rewards,\n          projected\n        };\n      }\n    });\n\n    return out;\n  }\n  compute_base(){\n    let projections = this.categories.map(cat=>this.compute_card(cat));\n    projections = projections.sort((a,b)=>{return b.projected-a.projected});\n\n    this.props.set_recommended_next_card(projections[0].card);\n\n    let base = projections.slice(0, this.state.base),\n        db   = base.map(cat=>cat.card),\n        af   = base.reduce((prev,next)=>({card:{fee:prev.card.fee+next.card.fee}})).card.fee;\n\n    projections.slice(this.state.base).forEach((cat)=>{\n      base.push(this.compute_card(cat.category, db));\n    });\n\n    base.push({\n      category: 'Total',\n      card: {issuer:'',name:'Annual fee'+(this.state.base>1?'s: ':': ')+format_money(af)},\n      current: this.props.category_data.reduce((prev,next)=>({rewards:prev.rewards+next.rewards})).rewards,\n      projected: base.reduce((a,b)=>({projected:a.projected+b.projected})).projected-af\n    });\n\n    return base;\n  }\n  data_is_empty(data){\n    let sum = 0;\n    data.forEach((datum)=>{\n      sum += datum.total_spend;\n    });\n    return (sum === 0);\n  }\n  render(){\n    return (\n      <div>\n        <Typography variant=\"h4\" gutterBottom style={{textAlign:'center'}}>\n          I'd like to build a&nbsp;\n          <Select value={this.state.base} onChange={this.change_base} style={{fontSize:'2.125rem'}}>\n            <MenuItem value={1}>1-card</MenuItem>\n            <MenuItem value={2}>2-card</MenuItem>\n            <MenuItem value={3}>3-card</MenuItem>\n            <MenuItem value={4}>4-card</MenuItem>\n            <MenuItem value={5}>5-card</MenuItem>\n            <MenuItem value={6}>6-card</MenuItem>\n            <MenuItem value={7}>7-card</MenuItem>\n          </Select>\n          &nbsp;base:\n        </Typography>\n        <br />\n        {\n          this.data_is_empty(this.props.category_data) ? (\n            <Typography variant=\"subtitle1\" style={{textAlign:'center'}}>\n              No spending yet recorded.\n            </Typography>\n          ) : (\n            <TableContainer component={Paper}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>Category</TableCell>\n                    <TableCell>Card</TableCell>\n                    <TableCell align=\"right\">Current Rewards</TableCell>\n                    <TableCell align=\"right\">Projected Rewards</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {\n                    this.compute_base().map((cat, ind)=>{\n                      return (\n                        <TableRow key={ind} style={cat.category==='Total'?{fontStyle:'italic'}:{}}>\n                          <TableCell>{cat.category}</TableCell>\n                          <TableCell>{cat.projected===0?'N/A':cat.card.issuer+' '+cat.card.name}</TableCell>\n                          <TableCell align=\"right\">{format_money(cat.current)}</TableCell>\n                          <TableCell align=\"right\" style={{fontWeight:'bold'}}>{format_money(cat.projected)}</TableCell>\n                        </TableRow>\n                      );\n                    })\n                  }\n                </TableBody>\n              </Table>\n            </TableContainer>\n          )\n        }\n      </div>\n    );\n  }\n}\n\n/*\n * SETUP VIEW\n */\nclass Setup extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      active_card: 0,\n      card_dialog_open: false,\n\n      name: '',\n      cards: [],\n      credit_score: ''\n    };\n    this.type_first_name = this.type_first_name.bind(this);\n    this.type_credit_score = this.type_credit_score.bind(this);\n    this.add_card = this.add_card.bind(this);\n    this.card_dialog_close = this.card_dialog_close.bind(this);\n  }\n  type_first_name(e){\n    this.setState({\n      active_card: (e.target.value.trim() === '' ? 0 : (this.state.active_card === 0 ? 1 : this.state.active_card)),\n      name: e.target.value.trim()\n    });\n  }\n  type_credit_score(e){\n    this.setState({\n      credit_score: e.target.value\n    });\n  }\n  add_card(){\n    this.setState({\n      card_dialog_open: true\n    });\n  }\n  card_dialog_close(new_card, nickname){\n    let arr = this.state.cards;\n    if(new_card !== undefined){\n      arr.push({...new_card,nickname:nickname||new_card.name,outstanding_debt:0,rewards:0,balance:0});\n      if(new_card.type !== 'Debit' &&\n        (new_card.credit_score > parseInt(this.state.credit_score) ||\n        isNaN(parseInt(this.state.credit_score)))){\n        this.setState({credit_score:new_card.credit.toString()});\n      }\n    }\n    this.setState({\n      cards: arr,\n      card_dialog_open: false,\n      active_card: (arr.length > 0 ? 2 : 1)\n    });\n  }\n  render(){\n    return (\n      <div style={this.props.visible ? {} : {display:'none',visibility:'hidden',opacity:'0'}}>\n        <div className=\"hero\">\n          <div>\n            <Card variant=\"outlined\" className=\"padded-card\">\n              <CardContent>\n                <Typography variant=\"h2\" gutterBottom>\n                  Money\n                </Typography>\n                <Typography variant=\"h6\" gutterBottom>\n                  Keep tabs on how your money moves.\n                </Typography>\n                <br />\n                <a href=\"#setup-start\" className=\"no-underline\">\n                  <Button variant=\"outlined\" color=\"primary\" className=\"full-width\">Get started</Button>\n                </a>\n              </CardContent>\n            </Card>\n          </div>\n        </div>\n        <br />\n        <br />\n        <Container maxWidth=\"sm\" id=\"setup-start\">\n          <Card className=\"padded-card\">\n            <CardContent>\n              <Typography variant=\"h3\" gutterBottom>\n                First things first:\n              </Typography>\n              <TextField label=\"What's your first name?\" variant=\"outlined\" fullWidth onChange={this.type_first_name} />\n            </CardContent>\n          </Card>\n          <br />\n          <hr />\n          <br />\n          <Card className=\"padded-card\" style={this.state.active_card >= 1 ? {} : {opacity:'0.5', pointerEvents:'none'}}>\n            <CardContent>\n              <Typography variant=\"h3\" gutterBottom>\n                What accounts do you have?\n              </Typography>\n              <br />\n              {\n                this.state.cards.map((item, i)=>{\n                  return (\n                    <div key={i}>\n                      <Card variant=\"outlined\" className=\"full-width media-card\">\n                        <CardMedia image={item.image} className=\"media-card-image\" />\n                        <CardContent className=\"media-card-text\">\n                          <Typography variant=\"subtitle1\">\n                            {item.issuer}\n                          </Typography>\n                          <Typography variant=\"h5\" gutterBottom>\n                            {item.nickname}\n                          </Typography>\n                          <Typography variant=\"subtitle1\">\n                            Annual fee:  ${item.fee}\n                          </Typography>\n                        </CardContent>\n                      </Card>\n                      <br />\n                    </div>\n                  );\n                })\n              }\n              <br />\n              <Button variant=\"contained\" color=\"secondary\" className=\"full-width\" onClick={this.add_card}>Add account</Button>\n              <AddCardDialog open={this.state.card_dialog_open} onClose={this.card_dialog_close} existing_cards={this.state.cards} />\n            </CardContent>\n          </Card>\n          <br />\n          <Card className=\"padded-card\" style={this.state.active_card >= 1 ? {} : {opacity:'0.5', pointerEvents:'none'}}>\n            <CardContent>\n              <Typography variant=\"h3\" gutterBottom>\n                What's your credit score?\n              </Typography>\n              <TextField label=\"Optional\" variant=\"outlined\" fullWidth value={this.state.credit_score} onChange={this.type_credit_score} />\n            </CardContent>\n          </Card>\n          <br />\n          <hr />\n          <br />\n          <Button variant=\"contained\" color=\"primary\" fullWidth className=\"opacity-transition\" style={this.state.active_card >= 2 ? {} : {opacity:'0.5', pointerEvents:'none'}} onClick={()=>{this.props.store_cards(this.state.cards);this.props.next_view({name:this.state.name})}}>Go!</Button>\n          <br />\n          <br />\n        </Container>\n      </div>\n    );\n  }\n}\n\n/*\n * MAIN APPLICATION VIEW\n */\nclass Main extends React.Component {\n  constructor(props){\n    super(props);\n    let state = localStorage.getItem('Main_state');\n    if(state === null){\n      this.state = {\n        view: 0,\n        drawer_is_permanent: (window.innerWidth >= 900),\n        trans_dialog_open: false,\n        card_tab: 0,\n        spend_tab: 1,\n\n        total_assets: 0,\n        outstanding_debt: 0,\n        gross_inflow: 0,\n        gross_outflow: 0,\n\n        total_rewards: 0,\n        best_performer: undefined,\n        recommended_next_card: undefined,\n\n        card_data: [],\n        // card_data: [...this.props.cards_from_setup], // XXX: Debug\n        category_data: [\n          {category:'Restaurants', total_spend: 0, rewards: 0},\n          {category:'Travel', total_spend: 0, rewards: 0},\n          {category:'Groceries', total_spend: 0, rewards: 0},\n          {category:'Gas', total_spend: 0, rewards: 0},\n          {category:'Entertainment', total_spend: 0, rewards: 0},\n          {category:'Online shopping', total_spend: 0, rewards: 0},\n          {category:'Other', total_spend: 0, rewards: 0},\n        ],\n\n        card_dialog_open: false,\n\n        view_name: 'Accounts',\n\n        timeframe: 'all',\n\n        rows: []\n      };\n    } else {\n      this.state = JSON.parse(state);\n      this.update_everything();\n    }\n\n    this.view_names = {\n      'Accounts': {index:0,icon:(<ListIcon/>)},\n      'Transactions': {index:1,icon:(<AccountBalanceIcon/>)},\n      'Rewards': {index:2,icon:(<CreditCardIcon/>)},\n      'CC Simulator': {index:3,icon:(<AssessmentIcon/>)}\n    };\n\n    this.change_view = this.change_view.bind(this);\n    this.add_new_transaction = this.add_new_transaction.bind(this);\n    this.remove_transaction = this.remove_transaction.bind(this);\n    this.change_row = this.change_row.bind(this);\n    this.change_card_tab = this.change_card_tab.bind(this);\n    this.change_spend_tab = this.change_spend_tab.bind(this);\n    this.close_card_dialog = this.close_card_dialog.bind(this);\n    this.remove_card = this.remove_card.bind(this);\n    this.change_timeframe = this.change_timeframe.bind(this);\n\n    this.update_everything = this.update_everything.bind(this);\n\n    this.set_recommended_next_card = this.set_recommended_next_card.bind(this);\n\n    this.open_card_dialog = this.open_card_dialog.bind(this);\n  }\n  componentDidMount(){\n    window.addEventListener('resize', ()=>{\n      this.setState({\n        drawer_is_permanent: (window.innerWidth >= 900)\n      });\n    });\n    window.addEventListener('hashchange', ()=>{\n      if(location.hash.indexOf('setup-start') === -1) this.change_view(decodeURIComponent(location.hash.slice(1)));\n    });\n    // this.update_everything(); // XXX: Debug\n  }\n  change_view(name){\n    this.setState({\n      view: this.view_names[name].index,\n      view_name: name\n    }, ()=>{\n      location.hash = name;\n      window.scrollTo(0, 0);\n    });\n  }\n  add_new_transaction(){\n    this.setState({\n      rows: [\n        ...this.state.rows,\n        {id: (this.state.rows.length===0?0:this.state.rows[this.state.rows.length-1].id+1), date: new Date(Date.now()), name: 'Double click to edit', amount: 0, card: this.state.card_data[0].nickname, category: 'Other'}\n      ]\n    });\n  }\n  remove_transaction(id){\n    let rows = this.state.rows.slice();\n    rows.forEach((row, ind)=>{\n      if(row.id === id.row.id) rows.splice(ind, 1);\n    });\n    this.setState({rows}, this.update_everything);\n  }\n  change_row(params, evt){\n    if(params.row === undefined) params.row = this.state.rows[params.id];\n    let new_row = JSON.parse(JSON.stringify(params.row));\n    new_row[params.field] = params.value;\n    this.setState({\n      rows: [\n        ...this.state.rows.slice(0, params.id),\n        new_row,\n        ...this.state.rows.slice(params.id+1)\n      ]\n    }, this.update_everything);\n  }\n  change_card_tab(evt, card_tab){\n    this.setState({card_tab});\n  }\n  change_spend_tab(evt, spend_tab){\n    this.setState({spend_tab});\n  }\n  close_card_dialog(card, nickname){\n    if(card !== undefined){\n      let cpy = JSON.parse(JSON.stringify(card));\n      cpy.nickname = (nickname===''?card.name:nickname);\n      cpy.outstanding_debt = 0;\n      cpy.rewards = 0;\n      cpy.balance = 0;\n      this.setState({\n        card_data: [\n          ...this.state.card_data,\n          cpy\n        ]\n      });\n    }\n    this.setState({\n      card_dialog_open: false\n    });\n  }\n  remove_card(card, ind){\n    let card_data = this.state.card_data.filter((itr)=>{\n      return card.nickname !== itr.nickname;\n    });\n    this.setState({card_data}, this.update_everything);\n  }\n  change_timeframe(timeframe){\n    // Go go gadget terrible hack\n    //\n    // This is because changing this affects\n    //   the \"next recommended card\" calculation,\n    //   meaning by delaying this with a timeout\n    //   we avoid a race condition.\n    this.setState({timeframe}, ()=>{\n      setTimeout(this.update_everything, 10);\n    });\n  }\n \n  compute_rewards(row){\n    if(row.card.type === 'Debit') return 0;\n\n    let card = this.state.card_data.find(el=>el.nickname===row.card);\n    if(card === undefined) return 0;\n\n    return (-row.amount) * card[row.category.toLowerCase()] * card.conversion;\n  }\n  update_everything(cd){\n    let out = {\n      total_assets: 0,\n      outstanding_debt: 0,\n      gross_inflow: 0,\n      gross_outflow: 0,\n\n      total_rewards: 0,\n      best_performer: undefined,\n\n      card_data: cd ?? this.state.card_data,\n      category_data: this.state.category_data\n    },\n      month = new Date().getMonth(), \n      year = new Date().getFullYear();\n    out.card_data.forEach((card)=>{\n      card.total_spend = 0;\n      card.outstanding_debt = 0;\n      card.rewards = 0;\n      if(card.type === 'Debit') card.balance = 0;\n    });\n    out.category_data.forEach((cat)=>{\n      cat.total_spend = 0;\n      cat.rewards = 0;\n    });\n    this.state.rows.forEach((row)=>{\n      out.total_assets += row.amount;\n\n      let card = out.card_data.find(el=>el.nickname===row.card);\n      if(card !== undefined && card.type === 'Debit'){\n        card.balance += row.amount;\n      }\n\n      if(this.state.timeframe === 'month' &&\n         new Date(row.date).getMonth() !== month) return;\n\n      if(this.state.timeframe === 'ytd' &&\n         new Date(row.date).getFullYear() !== year) return;\n\n      if(row.amount > 0){\n        out.gross_inflow += row.amount;\n      } else {\n        out.gross_outflow += row.amount;\n      }\n\n      if(card !== undefined){\n        if(row.amount < 0) card.total_spend += Math.abs(row.amount);\n        if(card.type !== 'Debit') card.outstanding_debt += row.amount;\n        card.rewards += this.compute_rewards(row);\n      }\n\n      let cat = out.category_data.find(el=>el.category===row.category);\n      if(row.amount < 0) cat.total_spend += Math.abs(row.amount);\n      cat.rewards += this.compute_rewards(row);\n    });\n    out.card_data.forEach((card)=>{\n      if(card.type !== 'Debit'){\n        out.outstanding_debt += card.outstanding_debt;\n\n        if(card.rewards > 0 &&\n           (out.best_performer === undefined ||\n            out.best_performer.rewards < card.rewards)){\n          out.best_performer = card;\n        }\n      }\n    });\n    out.category_data.forEach((cat)=>{\n      out.total_rewards += cat.rewards;\n    });\n    this.setState({...out});\n    // this.forceUpdate();\n  }\n  set_recommended_next_card(recommended_next_card){\n    should_rerender = false;\n    this.setState({recommended_next_card});\n  }\n  open_card_dialog(){\n    this.setState({card_dialog_open:true});\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot){\n    if(this.props.cards_from_setup.length > prevProps.cards_from_setup.length){\n      this.setState({\n        card_data: this.props.cards_from_setup\n      });\n    }\n    localStorage.setItem('Main_state', JSON.stringify(this.state));\n  }\n  shouldComponentUpdate(){\n    if(should_rerender) return true;\n    should_rerender = true;\n    return false;\n  }\n  render(){\n    return (\n      <div style={this.props.visible?{}:{display:'none',visibility:'hidden',opacity:'0'}}>\n        <ViewController view_name={this.state.view_name} view_names={this.view_names} changeView={this.change_view} timeframe={this.state.timeframe} change_timeframe={this.change_timeframe} />\n        <br />\n\n        <AddCardDialog open={this.state.card_dialog_open} onClose={this.close_card_dialog} existing_cards={this.state.card_data} />\n\n        <div style={this.state.drawer_is_permanent?{marginLeft:'169px'}:{}}>\n          <Container maxWidth=\"md\">\n            <View number={0} view={this.state.view}>\n              <AccountsView\n                name={this.props.name}\n                total_assets={this.state.total_assets}\n                outstanding_debt={this.state.outstanding_debt}\n                gross_inflow={this.state.gross_inflow}\n                gross_outflow={this.state.gross_outflow}\n                change_view={this.change_view}\n                add_new_transaction={this.add_new_transaction}\n                open_card_dialog={this.open_card_dialog}\n                card_data={this.state.card_data}\n                remove_card={this.remove_card}\n                spend_tab={this.state.spend_tab}\n                change_spend_tab={this.change_spend_tab}\n                category_data={this.state.category_data}\n              />\n            </View>\n\n            <View number={1} view={this.state.view}>\n              <TransactionsView\n                rows={this.state.rows}\n                change_row={this.change_row}\n                add_new_transaction={this.add_new_transaction}\n                remove_transaction={this.remove_transaction}\n                card_data={this.state.card_data}\n              />\n            </View>\n\n            <View number={2} view={this.state.view}>\n              <RewardsView\n                total_rewards={this.state.total_rewards}\n                best_performer={this.state.best_performer}\n                outstanding_debt={this.state.outstanding_debt}\n                recommended_next_card={this.state.recommended_next_card}\n                card_data={this.state.card_data}\n                remove_card={this.remove_card}\n                open_card_dialog={this.open_card_dialog}\n                card_tab={this.state.card_tab}\n                change_card_tab={this.change_card_tab}\n                category_data={this.state.category_data}\n              />\n            </View>\n\n            <View number={3} view={this.state.view}>\n              <CardSimulatorView\n                card_data={this.state.card_data}\n                category_data={this.state.category_data}\n                compute_rewards={this.compute_rewards}\n                set_recommended_next_card={this.set_recommended_next_card}\n              />\n            </View>\n          </Container>\n        </div>\n      </div>\n    );\n  }\n}\n\n/*\n * ENTRY POINT\n */\nexport default class App extends React.Component {\n  constructor(props){\n    super(props);\n    let state = localStorage.getItem('App_state');\n    if(state === null){\n      this.state = {\n        view: 0,\n        // view: 1, // XXX: Debug\n        name: '',\n        cards: []\n        // cards: [{...card_db.find(el=>el.name==='Total Checking'),nickname:'Total Checking',outstanding_debt:0,rewards:0,balance:0}] // XXX: Debug\n      };\n    } else this.state = JSON.parse(state);\n    this.next_view = this.next_view.bind(this);\n    this.store_cards = this.store_cards.bind(this);\n  }\n  componentDidUpdate(){\n    localStorage.setItem('App_state', JSON.stringify(this.state));\n  }\n  next_view(data){\n    this.setState({\n      view: this.state.view+1,\n      ...data\n    });\n    window.scrollTo(0, 0);\n  }\n  store_cards(cards){\n    this.setState({cards});\n  }\n  render(){\n    return (\n      <div>\n        <Setup visible={this.state.view===0} next_view={this.next_view} store_cards={this.store_cards} />\n        <Main visible={this.state.view===1} name={this.state.name} cards_from_setup={this.state.cards} />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}